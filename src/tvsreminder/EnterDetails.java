/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tvsreminder;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import tvsservicerecord.TVSServiceRecord;

/**
 *
 * @author Samad
 */
public class EnterDetails extends javax.swing.JFrame {

    UserDTO loginUser;
    Date todayDate;

    /**
     * Creates new form EnterDetails
     */
    /*public EnterDetails(UserDTO logiUser) {
        this.loginUser = logiUser;
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
        spin_fService.setEditor(new JSpinner.DateEditor(spin_fService, "dd/MM/yyyy"));
        spin_lService.setEditor(new JSpinner.DateEditor(spin_lService, "dd/MM/yyyy"));
        spin_nService.setEditor(new JSpinner.DateEditor(spin_nService, "dd/MM/yyyy"));
        spin_edtm.setEditor(new JSpinner.DateEditor(spin_edtm, "dd/MM/yyyy"));
        initDashboard();
        initializeEntryTab();
        if(logiUser.getType().equals("Admin")){
            tabPane.getTabComponentAt(2).setVisible(true);
        }
        else{
            tabPane.getTabComponentAt(2).setVisible(false);
        }
        
    }
     */
    public EnterDetails() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            // TODO add your handling code here:
            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
            String date = formater.format(new Date());
            todayDate = formater.parse(date);

        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        spin_fService.setEditor(new JSpinner.DateEditor(spin_fService, "dd/MM/yyyy"));
        spin_lService.setEditor(new JSpinner.DateEditor(spin_lService, "dd/MM/yyyy"));
        spin_nService.setEditor(new JSpinner.DateEditor(spin_nService, "dd/MM/yyyy"));
        spin_edtm.setEditor(new JSpinner.DateEditor(spin_edtm, "dd/MM/yyyy"));
        initDashboard();
        initializeEntryTab();
        if (TVSServiceRecord.LgnUser.getType().equals("Admin")) {

        } else {
            tabPane.removeTabAt(2);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jOptionPane1 = new javax.swing.JOptionPane();
        jLabel8 = new javax.swing.JLabel();
        tabPane = new javax.swing.JTabbedPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        todayGrid = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        upcomingGrid = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        txt_chasis = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_phone2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_address = new javax.swing.JTextArea();
        txt_eby = new javax.swing.JTextField();
        txt_phone1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_addEntry = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_model = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        customerGrid = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        spin_fService = new javax.swing.JSpinner();
        spin_lService = new javax.swing.JSpinner();
        spin_nService = new javax.swing.JSpinner();
        spin_edtm = new javax.swing.JSpinner();
        spin_km = new javax.swing.JSpinner();
        lbl_valid = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btn_enterDetailsReset = new javax.swing.JButton();
        btn_deleteEntry = new javax.swing.JButton();
        txt_userID = new javax.swing.JLayeredPane();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_userid = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_pasword = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        userGrid = new javax.swing.JTable();
        lbl_validUser = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cmb_userType = new javax.swing.JComboBox<>();
        btn_resetUser = new javax.swing.JButton();
        btn_deleteUser = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TVS Service Record Keeper");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attributes/tvs_small.png"))); // NOI18N
        jLabel8.setText("Service Record Keeper");

        tabPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabPaneStateChanged(evt);
            }
        });
        tabPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabPaneFocusGained(evt);
            }
        });

        todayGrid.setAutoCreateRowSorter(true);
        todayGrid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Chasis No.", "Model", "K.m.", "Name", "Phone1", "Phone2", "Address", "Last Service", "First Service", "Entered By", "Entered On"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        todayGrid.setToolTipText("");
        todayGrid.setColumnSelectionAllowed(true);
        todayGrid.setRowSelectionAllowed(true);
        todayGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                todayGridMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(todayGrid);
        todayGrid.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (todayGrid.getColumnModel().getColumnCount() > 0) {
            todayGrid.getColumnModel().getColumn(4).setPreferredWidth(150);
            todayGrid.getColumnModel().getColumn(5).setPreferredWidth(150);
            todayGrid.getColumnModel().getColumn(6).setPreferredWidth(400);
        }

        jLabel13.setText("Customers With Service Due Today");

        jLabel14.setText("Customers With Upcoming Service");

        upcomingGrid.setAutoCreateRowSorter(true);
        upcomingGrid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Chasis No.", "Model", "K.m.", "Name", "Phone1", "Phone2", "Address", "Last Service", "Next Service", "First Service", "Entered By", "Entered On"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        upcomingGrid.setToolTipText("");
        jScrollPane5.setViewportView(upcomingGrid);

        jLayeredPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(659, 974, Short.MAX_VALUE))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Dashboard", jLayeredPane2);

        txt_chasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_chasisFocusLost(evt);
            }
        });
        txt_chasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_chasisActionPerformed(evt);
            }
        });

        jLabel3.setText("Phone Number");

        jLabel10.setText("Date Of Last Service");

        txt_phone2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phone2ActionPerformed(evt);
            }
        });

        txt_address.setColumns(20);
        txt_address.setRows(5);
        jScrollPane3.setViewportView(txt_address);

        jLabel2.setText("Address");

        btn_addEntry.setText("Add");
        btn_addEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addEntryActionPerformed(evt);
            }
        });

        jLabel11.setText("Date Of Next Service");

        jLabel7.setText("Entered By");

        txt_model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_modelActionPerformed(evt);
            }
        });

        jLabel9.setText("Entered On");

        jLabel6.setText("Date Of First Service");

        jLabel1.setText("Chasis Number ");

        jLabel4.setText("Kilometers Driven");

        jLabel5.setText("Name Of Customer");

        customerGrid.setAutoCreateRowSorter(true);
        customerGrid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Service Id", "Chasis No.", "Model", "Cust. Name", "Address", "Phone1", "Phone2", "K.m.", "F. Service Dt.", "L. Service Dt.", "N. Service Dt.", "Eby", "Edtm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerGrid.setDragEnabled(true);
        customerGrid.setRequestFocusEnabled(false);
        customerGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerGridMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(customerGrid);

        jLabel12.setText("Model Name");

        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });

        spin_fService.setModel(new javax.swing.SpinnerDateModel());

        spin_lService.setModel(new javax.swing.SpinnerDateModel());
        spin_lService.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spin_lServiceStateChanged(evt);
            }
        });
        spin_lService.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spin_lServicePropertyChange(evt);
            }
        });

        spin_nService.setModel(new javax.swing.SpinnerDateModel());

        spin_edtm.setModel(new javax.swing.SpinnerDateModel());

        spin_km.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(0L), Long.valueOf(0L), Long.valueOf(999999L), Long.valueOf(1L)));

        lbl_valid.setForeground(new java.awt.Color(255, 0, 0));
        lbl_valid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel16.setForeground(new java.awt.Color(204, 51, 0));
        jLabel16.setText("*");

        jLabel17.setForeground(new java.awt.Color(204, 51, 0));
        jLabel17.setText("*");

        btn_enterDetailsReset.setText("Reset");
        btn_enterDetailsReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enterDetailsResetActionPerformed(evt);
            }
        });

        btn_deleteEntry.setText("Delete");
        btn_deleteEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteEntryActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(txt_chasis, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txt_phone2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txt_eby, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txt_phone1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_addEntry, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txt_model, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txt_name, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spin_fService, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spin_lService, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spin_nService, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spin_edtm, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spin_km, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lbl_valid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_enterDetailsReset, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_deleteEntry, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(txt_chasis, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_model, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                                    .addComponent(txt_phone1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txt_phone2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(1, 1, 1)))
                                            .addComponent(spin_km, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(57, 57, 57)
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_eby)
                                    .addComponent(spin_nService, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(spin_lService, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spin_fService, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spin_edtm)))
                            .addComponent(jScrollPane3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(lbl_valid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(95, 95, 95)
                        .addComponent(btn_addEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_deleteEntry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_enterDetailsReset))
                    .addComponent(jScrollPane4))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spin_fService)
                            .addComponent(txt_chasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(spin_lService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(spin_nService)
                            .addComponent(jLabel4)
                            .addComponent(spin_km, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_eby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(spin_edtm)
                            .addComponent(txt_phone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_phone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_valid)
                        .addGap(44, 44, 44))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_addEntry)
                            .addComponent(btn_enterDetailsReset)
                            .addComponent(btn_deleteEntry))
                        .addContainerGap(18, Short.MAX_VALUE))))
        );

        tabPane.addTab("Enter Details", jLayeredPane1);

        jLabel15.setText("User Id.");

        jLabel18.setText("Username");

        jLabel19.setText("Password");

        txt_userid.setEnabled(false);
        txt_userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_useridActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        userGrid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User Id", "Username", "Password", "User Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userGrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userGridMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(userGrid);

        lbl_validUser.setForeground(new java.awt.Color(204, 0, 0));

        jLabel21.setText("User Type");

        cmb_userType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Employee", " " }));
        cmb_userType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_userTypeActionPerformed(evt);
            }
        });

        btn_resetUser.setText("Reset");
        btn_resetUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetUserActionPerformed(evt);
            }
        });

        btn_deleteUser.setText("Delete");
        btn_deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteUserActionPerformed(evt);
            }
        });

        txt_userID.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(txt_userid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(txt_username, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(txt_pasword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(lbl_validUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(cmb_userType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(btn_resetUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txt_userID.setLayer(btn_deleteUser, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout txt_userIDLayout = new javax.swing.GroupLayout(txt_userID);
        txt_userID.setLayout(txt_userIDLayout);
        txt_userIDLayout.setHorizontalGroup(
            txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_userIDLayout.createSequentialGroup()
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(txt_userIDLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txt_userIDLayout.createSequentialGroup()
                                .addComponent(lbl_validUser, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_deleteUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_resetUser))
                            .addGroup(txt_userIDLayout.createSequentialGroup()
                                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel21))
                                .addGap(35, 35, 35)
                                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pasword)
                                    .addComponent(txt_username)
                                    .addComponent(txt_userid)
                                    .addComponent(cmb_userType, 0, 282, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(txt_userIDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(566, Short.MAX_VALUE))
        );
        txt_userIDLayout.setVerticalGroup(
            txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_userIDLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_userid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_pasword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_userType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_validUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(txt_userIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_resetUser)
                        .addComponent(btn_deleteUser)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Users", txt_userID);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_phone2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phone2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phone2ActionPerformed

    private void txt_chasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_chasisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_chasisActionPerformed

    private void txt_modelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_modelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_modelActionPerformed


    private void btn_addEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addEntryActionPerformed
        // TODO add your handling code here:
        lbl_valid.setText(null);
        if (!(txt_chasis.getText().trim().length() == 0 && txt_name.getText().trim().length() == 0)) {
            try {
                SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
                String fServeDate = formater.format(spin_fService.getValue());
                String lServeDate = formater.format(spin_lService.getValue());
                String nServeDate = formater.format(spin_nService.getValue());
                String edtm = formater.format(spin_edtm.getValue());
                serviceDTO srEntry = new serviceDTO(
                        txt_chasis.getText().trim(),
                        txt_model.getText().trim(),
                        Integer.parseInt(spin_km.getValue().toString()),
                        txt_name.getText().trim(),
                        txt_phone1.getText().trim(),
                        txt_phone2.getText().trim(),
                        txt_address.getText().trim(),
                        fServeDate,
                        lServeDate,
                        nServeDate,
                        txt_eby.getText().trim(),
                        edtm);
                processAddEntry ps = new processAddEntry();
                ps.addEntry(srEntry);
                ps.FillTable(customerGrid, "SELECT "
                        + "sr_srid,"
                        + "sr_chasis,"
                        + "sr_model,"
                        + "sr_custname,"
                        + "sr_custadd,"
                        + "sr_custphone1,"
                        + "sr_custphone2,"
                        + "sr_km,"
                        + "strftime(\"%d/%m/%Y\", sr_fservicedate),"
                        + "strftime(\"%d/%m/%Y\", sr_lservicedate),"
                        + "strftime(\"%d/%m/%Y\", sr_nservicedate),"
                        + "sr_eby,"
                        + "strftime(\"%d/%m/%Y\", sr_edtm)"
                        + "from srCservice ;");
            } catch (Exception ex) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lbl_valid.setText("Please enter for * marked fields.");
        }
    }//GEN-LAST:event_btn_addEntryActionPerformed


    private void tabPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabPaneFocusGained
        // TODO add your handling code here:
        System.out.println("Focused");


    }//GEN-LAST:event_tabPaneFocusGained

    private void tabPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabPaneStateChanged
        // TODO add your handling code here:
        lbl_valid.setText(null);
        lbl_validUser.setText(null);
        JTabbedPane tabSource = (JTabbedPane) evt.getSource();
        String tab = tabSource.getTitleAt(tabSource.getSelectedIndex());
        System.out.println(tab);
        if (tab.equalsIgnoreCase("Enter Details")) {
            initializeEntryTab();
        } else if (tab.equalsIgnoreCase("Dashboard")) {
            initDashboard();
        } else if (tab.equalsIgnoreCase("Users")) {
            intitializeUserTab();
        }
    }//GEN-LAST:event_tabPaneStateChanged


    private void spin_lServiceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spin_lServiceStateChanged
        try {
            // TODO add your handling code here:
            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
            String date = formater.format(spin_lService.getValue());
            System.out.println(date);
//            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Calendar c = Calendar.getInstance();
            c.setTime(formater.parse(date));
            c.add(Calendar.MONTH, 1);  // number of days to add
            date = formater.format(c.getTime());
            Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(date);
            spin_nService.setValue(date2);
        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_spin_lServiceStateChanged

    private void spin_lServicePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spin_lServicePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_spin_lServicePropertyChange

    private void todayGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayGridMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_todayGridMouseClicked

    private void customerGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerGridMouseClicked
        // TODO add your handling code here:
        lbl_valid.setText(null);
        int row = customerGrid.rowAtPoint(evt.getPoint());
        int col = customerGrid.columnAtPoint(evt.getPoint());
        System.out.println("Col " + col + " row " + row);
        if (row > -1 && col > -1) {

            try {
                txt_chasis.setText(customerGrid.getValueAt(row, 1).toString());
                txt_model.setText(customerGrid.getValueAt(row, 2).toString());
                txt_name.setText(customerGrid.getValueAt(row, 3).toString());
                txt_address.setText(customerGrid.getValueAt(row, 4).toString());
                txt_phone1.setText(customerGrid.getValueAt(row, 5).toString());
                txt_phone2.setText(customerGrid.getValueAt(row, 6).toString());
                spin_km.setValue(Integer.parseInt(customerGrid.getValueAt(row, 7).toString()));

                spin_fService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(customerGrid.getValueAt(row, 8).toString()));
                spin_lService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(customerGrid.getValueAt(row, 9).toString()));
                spin_nService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(customerGrid.getValueAt(row, 10).toString()));
                txt_eby.setText(customerGrid.getValueAt(row, 11).toString());
                spin_edtm.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(customerGrid.getValueAt(row, 12).toString()));
            } catch (Exception ex) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_customerGridMouseClicked

    private void txt_useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_useridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_useridActionPerformed

    private void cmb_userTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_userTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_userTypeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        lbl_validUser.setText(null);
        if (!(txt_username.getText().trim().length() == 0) || (txt_pasword.getText().trim().length() < 5)) {
            try {
                UserDTO us = new UserDTO(txt_username.getText().trim(), txt_pasword.getText().trim(), cmb_userType.getSelectedItem().toString());
                processUser usProcess = new processUser();
                processAddEntry ps = new processAddEntry();
                usProcess.insertUpdateUser(us);
                ps.FillTable(userGrid, "SELECT * FROM usXusers;");
            } catch (Exception ex) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lbl_validUser.setText("Please enter a valid user name and password");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void userGridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userGridMouseClicked
        // TODO add your handling code here:
        int row = userGrid.rowAtPoint(evt.getPoint());
        int col = userGrid.columnAtPoint(evt.getPoint());
        System.out.println("Col " + col + " row " + row);
        if (row > -1 && col > -1) {

            try {

                txt_userid.setText(userGrid.getValueAt(row, 0).toString());
                txt_username.setText(userGrid.getValueAt(row, 1).toString());
                txt_pasword.setText(userGrid.getValueAt(row, 2).toString());
                cmb_userType.getModel().setSelectedItem(userGrid.getValueAt(row, 3).toString());
            } catch (Exception ex) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_userGridMouseClicked

    private void btn_enterDetailsResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enterDetailsResetActionPerformed
        try {
            // TODO add your handling code here:
            lbl_valid.setText(null);
            txt_chasis.setText(null);
            txt_model.setText(null);
            txt_name.setText(null);
            txt_address.setText(null);
            txt_phone1.setText(null);
            txt_phone2.setText(null);
            spin_km.setValue(00);
            spin_fService.setValue(todayDate);
            spin_lService.setValue(todayDate);

            spin_edtm.setValue(todayDate);
            Calendar c = Calendar.getInstance();
            c.setTime(todayDate);
            c.add(Calendar.MONTH, 1);  // number of days to add

            spin_nService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(new SimpleDateFormat("dd/MM/yyyy").format(c.getTime())));

            txt_eby.setText(TVSServiceRecord.LgnUser.getName());
        } catch (ParseException ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btn_enterDetailsResetActionPerformed

    private void btn_deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteUserActionPerformed
        // TODO add your handling code here:
        if (txt_userid.getText().trim().length() > 0 && txt_username.getText().trim().length() > 0) {
            try {
                processUser ps = new processUser();
                ps.deleteUser(txt_userid.getText().trim(), txt_username.getText().trim());
                intitializeUserTab();
                txt_userid.setText(null);
                txt_username.setText(null);
                txt_pasword.setText(null);
                cmb_userType.getModel().setSelectedItem("Admin");
            } catch (Exception ex) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            lbl_validUser.setText("Please select a valid user to delete");
        }
    }//GEN-LAST:event_btn_deleteUserActionPerformed

    private void btn_resetUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetUserActionPerformed
        // TODO add your handling code here:
        txt_userid.setText(null);
        txt_username.setText(null);
        txt_pasword.setText(null);
        lbl_validUser.setText(null);
        cmb_userType.getModel().setSelectedItem("Admin");

    }//GEN-LAST:event_btn_resetUserActionPerformed

    private void btn_deleteEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteEntryActionPerformed
        lbl_valid.setText(null);
        try {
            // TODO add your handling code here:
            processAddEntry ps = new processAddEntry();
            if (txt_chasis.getText().length() > 0) {
                ps.deleteEnrty(txt_chasis.getText().trim(), txt_model.getText().trim());
                try {
                    // TODO add your handling code here:
                    txt_chasis.setText(null);
                    txt_model.setText(null);
                    txt_name.setText(null);
                    txt_address.setText(null);
                    txt_phone1.setText(null);
                    txt_phone2.setText(null);
                    spin_km.setValue(00);
                    spin_fService.setValue(todayDate);
                    spin_lService.setValue(todayDate);

                    spin_edtm.setValue(todayDate);
                    Calendar c = Calendar.getInstance();
                    c.setTime(todayDate);
                    c.add(Calendar.MONTH, 1);  // number of days to add

                    spin_nService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(new SimpleDateFormat("dd/MM/yyyy").format(c.getTime())));

                    txt_eby.setText(TVSServiceRecord.LgnUser.getName());
                } catch (ParseException ex) {
                    Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                lbl_valid.setText("Please select a valid record to delete");
            }
            ps.FillTable(customerGrid, "SELECT "
                    + "sr_srid,"
                    + "sr_chasis,"
                    + "sr_model,"
                    + "sr_custname,"
                    + "sr_custadd,"
                    + "sr_custphone1,"
                    + "sr_custphone2,"
                    + "sr_km,"
                    + "strftime(\"%d/%m/%Y\", sr_fservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_lservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_nservicedate),"
                    + "sr_eby,"
                    + "strftime(\"%d/%m/%Y\", sr_edtm)"
                    + "from srCservice ;");

        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_deleteEntryActionPerformed

    private void txt_chasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_chasisFocusLost
        try {
            // TODO add your handling code here:
            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
            processAddEntry ps = new processAddEntry();
            serviceDTO sr = ps.getServiceDetails(txt_chasis.getText().trim());
            if (sr.isRowFound()) {
                txt_chasis.setText(sr.getChasis());
                txt_model.setText(sr.getModel());
                txt_name.setText(sr.getCustName());
                txt_address.setText(sr.getCustAdd());
                txt_phone1.setText(sr.getCustPhone1());
                txt_phone2.setText(sr.getCustPhone2());
                txt_eby.setText(sr.getEby());
                spin_km.setValue(sr.getKilometers());
                spin_fService.setValue(formater.parse(sr.getfServiceDate()));
                spin_lService.setValue(formater.parse(sr.getlServiceDate()));
                spin_nService.setValue(formater.parse(sr.getnServiceDate()));
                spin_edtm.setValue(formater.parse(sr.getEdtm()));
            }

        } catch (Exception ex) {
            try {
                txt_chasis.setText(null);
                txt_model.setText(null);
                txt_name.setText(null);
                txt_address.setText(null);
                txt_phone1.setText(null);
                txt_phone2.setText(null);
                spin_km.setValue(00);
                spin_fService.setValue(todayDate);
                spin_lService.setValue(todayDate);

                spin_edtm.setValue(todayDate);
                Calendar c = Calendar.getInstance();
                c.setTime(todayDate);
                c.add(Calendar.MONTH, 1);  // number of days to add

                spin_nService.setValue(new SimpleDateFormat("dd/MM/yyyy").parse(new SimpleDateFormat("dd/MM/yyyy").format(c.getTime())));

                txt_eby.setText(TVSServiceRecord.LgnUser.getName());
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex1) {
                Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }//GEN-LAST:event_txt_chasisFocusLost

    public void initializeEntryTab() {
        spin_km.setValue(00);
        txt_eby.setText(TVSServiceRecord.LgnUser.getName());
        try {
            // TODO add your handling code here:
            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
            String date = formater.format(spin_lService.getValue());
            System.out.println(date);
//            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Calendar c = Calendar.getInstance();
            c.setTime(formater.parse(date));
            c.add(Calendar.MONTH, 1);  // number of days to add
            date = formater.format(c.getTime());
            Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(date);
            spin_nService.setValue(date2);

        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        processAddEntry ps = new processAddEntry();
        try {
            ps.FillTable(customerGrid, "SELECT "
                    + "sr_srid,"
                    + "sr_chasis,"
                    + "sr_model,"
                    + "sr_custname,"
                    + "sr_custadd,"
                    + "sr_custphone1,"
                    + "sr_custphone2,"
                    + "sr_km,"
                    + "strftime(\"%d/%m/%Y\", sr_fservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_lservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_nservicedate),"
                    + "sr_eby,"
                    + "strftime(\"%d/%m/%Y\", sr_edtm)"
                    + "from srCservice ;");
        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void initDashboard() {
        processAddEntry ps = new processAddEntry();
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        Date d = new Date();
        String dateToday = formater.format(d);
        try {
            ps.FillTable(todayGrid, "SELECT"
                    + " sr_chasis,"
                    + "sr_model,"
                    + "sr_km,"
                    + "sr_custname,"
                    + "sr_custphone1,"
                    + "sr_custphone2,"
                    + "sr_custadd,"
                    + "strftime(\"%d/%m/%Y\", sr_lservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_fservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_edtm),"
                    + "sr_eby "
                    + "from srCservice where sr_nservicedate = '" + dateToday + "'");
        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ps.FillTable(upcomingGrid, "SELECT"
                    + " sr_chasis,"
                    + "sr_model,"
                    + "sr_km,"
                    + "sr_custname,"
                    + "sr_custphone1,"
                    + "sr_custphone2,"
                    + "sr_custadd,"
                    + "strftime(\"%d/%m/%Y\", sr_lservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_fservicedate),"
                    + "strftime(\"%d/%m/%Y\", sr_edtm),"
                    + "sr_eby "
                    + "from srCservice where sr_nservicedate > '" + dateToday + "'");
        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void intitializeUserTab() {
        try {
            processAddEntry ps = new processAddEntry();
            ps.FillTable(userGrid, "SELECT * FROM usXusers;");
        } catch (Exception ex) {
            Logger.getLogger(EnterDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new EnterDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addEntry;
    private javax.swing.JButton btn_deleteEntry;
    private javax.swing.JButton btn_deleteUser;
    private javax.swing.JButton btn_enterDetailsReset;
    private javax.swing.JButton btn_resetUser;
    private javax.swing.JComboBox<String> cmb_userType;
    private javax.swing.JTable customerGrid;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_valid;
    private javax.swing.JLabel lbl_validUser;
    public javax.swing.JSpinner spin_edtm;
    public javax.swing.JSpinner spin_fService;
    private javax.swing.JSpinner spin_km;
    public javax.swing.JSpinner spin_lService;
    public javax.swing.JSpinner spin_nService;
    public javax.swing.JTabbedPane tabPane;
    private javax.swing.JTable todayGrid;
    private javax.swing.JTextArea txt_address;
    private javax.swing.JTextField txt_chasis;
    private javax.swing.JTextField txt_eby;
    private javax.swing.JTextField txt_model;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_pasword;
    private javax.swing.JTextField txt_phone1;
    private javax.swing.JTextField txt_phone2;
    private javax.swing.JLayeredPane txt_userID;
    private javax.swing.JTextField txt_userid;
    private javax.swing.JTextField txt_username;
    private javax.swing.JTable upcomingGrid;
    private javax.swing.JTable userGrid;
    // End of variables declaration//GEN-END:variables
}
